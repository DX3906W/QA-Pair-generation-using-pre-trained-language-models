The information stored and manipulated by computer programs is generically referred to as data. Different kinds of data will be stored and manipulated in different ways. Inside the computer, whole numbers and numbers that have fractional components are stored differently. Technically, we say that these are two different data types. The data type of an object determines what values it can have and what operations can be performed on it. Whole numbers are represented using the integer data type (int for short). Values of type int can be positive or negative whole numbers. Numbers with fractional parts represent a floating point (or float) value. A numeric literal that does not contain a decimal point produces an int value. Still, a literal with a decimal point is represented by a float (even if the fractional part is 0). Python provides a special function called type that tells us any value’s data type (or “class”).
The function used in Python to determine a given value’s data type (or class) is
type
class
value_type
data_type
You should be warned that the float type only stores approximations of real numbers. There is a limit to the precision or accuracy of the stored values. Since float values are not exact, while ints always are, your general rule of thumb should be: If you don’t need fractional values, use an int.
What is the limitation of using floating-point values in programming?
Float values only store approximations of real numbers
Float values are less efficient than integer values
Float values are exact representations of real numbers
Float values can only store positive real numbers
